[{"title":"easy file sharing server漏洞复现","date":"2023-12-22T12:10:45.000Z","path":"/posts/31564/","text":"easy file sharing server漏洞复现 漏洞渗透测试 1、","tags":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"http://tomotoes.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}]},{"title":"pikachu靶场通关","date":"2023-12-12T14:22:52.000Z","path":"/posts/25736/","text":"pikachu打卡 第一关：基于表单的暴力破解 随便输入一队用户名和密码，打开bp，设置好代理，进行抓包。 发送给测试器。注明爆破的两个位置。 为两个位置分别选取字典进行爆破。 长度不同，有可能是账号密码，登录一下，发现这个就是账号密码。 验证码绕过(on server) 看一下，没什么思路。点了提示 作者的意思好像是叫我用第一题的方式进行爆破，正常情况下我会考虑验证码会一直更新，无法进行爆破，但是提示说了验证码一直有效，尝试一下。 发现两种形式的回应，一种是验证码输入错误，一种是username or password is not exist ~。 用bp抓包抓一下。发到重发器里面，我多次更改密码，验证码没改，发现出现的一直是username or password is not exist ~。那就说明了我抓到包后，没放包前，后台的验证码一直没有进行刷新。 所以我可以进行根据第一关方法进行爆破，。验证码只要你输入的是你第一次抓包的验证码就行了 爆破成功，登录看看 OK，登录成功。 验证码绕过(on client) 首先得话看一下提示内容， 所以我们打开一下源码看一下。 分析一下代码，只是正常的验证码生成验证，主要是这个验证码是在前端进行生成验证的，在提交表单之前进行验证的，所以我可以在第一次抓包的时候输入正确的验证码，这样的就能实现验证码绕过。 因为验证码已经在前端验证了，不在需要验证码了，直接删掉就行了。 OK,登录成功。 token防爆破？ token是什么意思 作为计算机术语时，是“令牌”的意思。Token是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登录后，服务器生成一个Token便将此Token返回给客户端，以后客户端只需带上这个Token前来请求数据即可，无需再次带上用户名和密码。 token其实说的更通俗点可以叫暗号，在一些数据传输之前，要先进行暗号的核对，不同的暗号被授权不同的数据操作。说白了token是一个身份卡，有权限的作用。例如在USB1.1协议中定义了4类数据包：token包、data包、handshake包和special包。主机和USB设备之间连续数据的交换可以分为三个阶段，第一个阶段由主机发送token包，不同的token包内容不一样（暗号不一样）可以告诉设备做不同的工作，第二个阶段发送data包，第三个阶段由设备返回一个handshake包。 token是用来干嘛的 使用token机制的身份验证方法，在服务器端不需要存储用户的登录记录。 大概的流程： 1️⃣客户端使用用户名和密码请求登录。 2️⃣服务端收到请求，验证用户名和密码。 3️⃣验证成功后，服务端会生成一个token，然后把这个token发送给客户端。 4️⃣客户端收到token后把它存储起来，可以放在cookie或者Local Storage（本地存储）里。 5️⃣客户端每次向服务端发送请求的时候都需要带上服务端发给的token。 6️⃣服务端收到请求，然后去验证客户端请求里面带着token，如果验证成功，就向客户端返回请求的数据。 bp攻击的4种方式介绍 一、狙击手模式（Sniper） 它使用一组Payload集合，依次爆破被§标志的爆破点。如果爆破点设置一个，payload设置10个，就执行10次；如果爆破点设置两个，则执行20次。 二、破城锤模式（Battering ram） 它使用一组Payload集合，同时爆破被§标志的爆破点。 无论爆破点设置几个，payload设置10个，就执行10次。 三、音叉模式（Pitchfork ） 同时爆破被§标志的爆破点，爆破点1指定payload1，爆破点2指定payload2。 无论爆破点设置几个，payload1设置10个，payload2设置10个，就执行10次。 并且一般按照payload少的执行，如payload1设置10个，payload2设置9个，就执行9次。 四、集束炸弹模式（Cluster bomb） *同时爆破被§标志的爆破点，爆破点1指定payload1，爆破点2指定payload2，依次使用payload1与payload2的组合进行爆破*。 payload1设置10个，payload2设置9个，就执行10*10=90次。 抓包之后放到重发器上面进行响应，发现token是一直在变换的。所以根据特征的话是选用音叉模式，因为要对应到token。 token采用递归搜索。 设定根据响应获取token的位置，而且整理是要采用单线程模式的。这里的话因为token对于每一个返回的包的token值都是不一样的，所以我们只能采用单线程攻击。 获取到密码，当然我们这里是默认知道账户admin的。 攻击成功。 Cross-site request forgery(CSRF) 首先讲一下什么是CSRF CSRF（Cross-Site Request Forgery）跨站请求伪造，是一种网络安全漏洞，攻击者利用受害者在已经登录的情况下对网站发起请求，从而实施恶意操作。攻击通常会利用受害者在其他网站上被诱导点击的链接或图片来触发。一旦攻击成功，攻击者可以以受害者的身份执行未经授权的操作，比如改变密码、转账等。 CSRF(get)： 首先看一下提示： 直接登进去看看，我是拿vince。 进去之后修改个人信息； 修改个人信息的时候记得抓包： 发现是get请求而且也没有token防护，修改掉地址，把地址改成block； 构造链接：http://10.33.2.218/pikachu/vul/csrf/csrfget/csrf_get_edit.php?sex=boy&amp;phonenum=18626545453&amp;add=block&amp;email=vince%40pikachu.com&amp;submit=submit 发给登录用户进行点击。 修改成功； CSRF(post)： 也是一样在修改信息之后进行抓包分析； 虽然post请求无法通过伪造URL进行攻击，但是可以通过伪造恶意的网页，将伪造的post请求隐藏在恶意网页的表单中，然后诱引用户点击按钮提交表单，数据就会post到存在的CSRF漏洞的网页中，最终用户的信息就会被修改。 这里我们利用bp的自带poc生成带有攻击代码的html页面。 这里我改掉了电话号码；生成表单。表单的url是：http://burp/show/3/dlsjgealvi9nfvbqntztldxnt37gn64h 点击按钮；、 信息就修改成功了 CSRF Token 一样的步骤，在修改信息准备提交时抓包 发现这次在GET请求的时候出现token进行防止CSRF攻击。查看token_get_edit.php的源码, 发现有一个set_token()函数, 该函数每次刷新页面都会被调用, 然后将SESSION中的token销毁, 并生成新的token发送至前端表单中。 在每次提交表单的时候，前端页面的token值都会传送至后台与SESSION中的token进行对比验证，由于攻击者不知道用户当前的token值，从而无法进行CSRF攻击。 RCE RCE(remote command/code execute)概述 RCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。 远程系统命令执行 一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口 比如我们常见的路由器、防火墙、入侵检测等设备的web管理界面上 一般会给用户提供一个ping操作的web界面，用户从web界面输入目标IP，提交后，后台会对该IP地址进行一次ping测试，并返回测试结果.而，如果，设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交“意想不到”的命令，从而让后台进行执行，从而控制整个后台服务器 远程代码执行 同样的道理,因为需求设计,后台有时候也会把用户的输入作为代码的一部分进行执行,也就造成了远程代码执行漏洞。 不管是使用了代码执行的函数,还是使用了不安全的反序列化等等。 exec “ping” 提示：想一下ping命令在系统上是怎么用的 打开rce_ping源码文件看一下，发现$_POST[‘ipaddress’]未经处理直接传给了$ip， 由此造成了远程命令执行漏洞 .evkynqfhvibi{} exec“evel” 查看源码 $_POST[‘txt’]未经过滤处理就直接当做eval函数的参数，所以造成了远程代码执行漏洞。 直接执行我上传的代码，而且这里如果我输入一个命令来写一个一句话木马文件，后面的话要用到的话可以用中国蚁剑进行连接。 File Inclusion(文件包含漏洞) 文件包含，是一个功能。在各种开发语言中都提供了内置的文件包含函数，其可以使开发人员在一个代码文件中直接包含（引入）另外一个代码文件。比如 在PHP中，提供了： include(),include_once() require(),require_once() 这些文件包含函数，这些函数在代码设计中被经常使用到。大多数情况下，文件包含函数中包含的代码文件是固定的，因此也不会出现安全问题。但是，有些时候，文件包含的代码文件被写成了一个变量，且这个变量可以由前端用户传进来，这种情况下，如果没有做足够的安全考虑，则可能会引发文件包含漏洞。攻击着会指定一个“意想不到”的文件让包含函数去执行，从而造成恶意操作。根据不同的配置环境，文件包含漏洞分为如下两种情况： **1.本地文件包含漏洞：**仅能够对服务器本地的文件进行包含，由于服务器上的文件并不是攻击者所能够控制的，因此该情况下，攻击着更多的会包含一些固定的系统配置文件，从而读取系统敏感信息。很多时候本地文件包含漏洞会结合一些特殊的文件上传漏洞，从而形成更大的威力。 **2.远程文件包含漏洞：**能够通过url地址对远程的文件进行包含，这意味着攻击者可以传入任意的代码，这种情况没啥好说的，准备挂彩。 File Inclusion(local) PHP中文件包含函数有以下四种： require() // 只在执行到此函数时才去包含文件，若包含的文件不存在产生警告，程序终止运行 require_once() // 如果一个文件已经被包含过，则不会在包含它 include() // 程序一运行文件便会包含进来，若包含文件不存在产生致命错误，程序继续运行 include_once() // 如果一个文件已经被包含过，则不会在包含它 对文件的漏洞进行包含 发现对include的使用的参数没有进行过滤处理。 由于是get传参，所以我只要对改url就行了； http://10.33.2.218/pikachu/vul/fileinclude/fi_local.php?filename=file6.php&amp;submit=提交查询# File Inclusion(remote) include的参数还是没有进行过滤处理。 这里的话为了方便测试，我直接在phpstudy根目录直接放置了一个webshell,txt。 里面包含了一句话生成一句话木马的指令。 所以构成了一个指令payload进行生成木马从而进行攻击。 http://10.33.2.218/pikachu/vul/fileinclude/fi_remote.php?filename=http://127.0.0.1/webshell.txt&amp;submit=提交查询 链接执行之后就会在fileinclude文件夹生成一句话木马文件shell.php。 之后就可以用中国蚁剑进行连接即可。","tags":[{"name":"pikachu","slug":"pikachu","permalink":"http://tomotoes.com/tags/pikachu/"}]},{"title":"渗透测试第三次作业","date":"2023-11-21T11:05:34.000Z","path":"/posts/63864/","text":"winshark抓取qq图片 一、工具： 1、winshark：https://www.wireshark.org/download.html 2、010 editor：https://www.sweetscape.com/download/010editor/ 二、实践过程 下载好winshark后打开 看到上面界面，我们要的是WiFi，所以选择WLAN2就行了。 进去之后正在捕获数据包，数据包很多，我们采取针对性的搜索方式就可以查找出qq图片。 这是我要发送的图片。 点击按钮开始捕获。 发送过去了； 这里注意一下：开启捕获之后再发图片，不然捕获不到数据包。 这里因为是tcp流传数据，而且我发送的图片是png类型的，16进制文件头是：89 50 4E 47 这里面有png16进制文件头。打开进去看看。 出现我的qq号，那这个就是应该就是我传的数据包了。 右键追踪流，tcp追踪流。 注意一定把数据类型改成原始数据，这样copy出来的才是16进制字符串。 用010editor新建一个16进制文件，粘贴上去。 由于我们复制的是传输过程的整个数据包，根据png文件的格式，16进制的文件头为89 50 4E 47；16进制的文件尾为AE 42 60 82 。所以我们用Ctrl+F来找出两个字符串的位置之后，文件头之上的16进制字符串删掉，文件尾以下的16进制字符串删掉。 删完之后保存，记得得给保存的图片添加后缀名.png。 OK，抓取到的图片和我刚开始发送的图片一样，抓取成功。 实验完成。","tags":[{"name":"渗透作业","slug":"渗透作业","permalink":"http://tomotoes.com/tags/%E6%B8%97%E9%80%8F%E4%BD%9C%E4%B8%9A/"}]},{"title":"渗透测试第二次作业","date":"2023-11-14T13:36:56.000Z","path":"/posts/59003/","text":"渗透测试第二次作业 信息收集： Goole hacking方式： 这里的话就讲几个常用的就好了。 1、site:限定搜索结果为指定网站或域名下的页面。例如：site:example.com 将搜索example.com网站下的所有页面。而且site:和域名之间不要有空格。 2、inurl：限定搜索结果包含指定的URL片段。例如：inurl:admin 将搜索URL中包含\"admin\"的页面。inurl前面也可以加入一些你想要关键词，这些关键词是在全体网页里面进行搜索的，而inurl后面的关键词是只能在url的片段有的才会显示在搜索界面。 3、filetype：限定搜索结果为指定文件类型的文件。例如：filetype:pdf 将搜索PDF文件。再者：filetype:xls “username | password\"的意思就是是要在网页标题中含有\"username\"或\"password\"的Excel文件（.xls格式）中搜索相关内容。 4、intitle：限定搜索结果标题包含指定的关键词。例如：intitle:“login” 将搜索页面标题中包含\"login\"的页面。 5、allintitle：限定搜索结果标题同时包含多个指定的关键词。例如：allintitle:“login” “admin” 将搜索页面标题中同时包含\"login\"和\"admin\"的页面 6、related：查找与指定网站或页面相关的其他网站。例如：related:example.com 将列出与example.com相关的其他网站。这个的话对于信息收集的话就很有用，个人感觉。 7、link：查找链接到指定网站或页面的其他网页。例如：link:example.com 将列出所有链接到example.com的页面。 只能说这些还是挺有用的。 还有一些别的好用的网站： ZoomEye可以搜索到大量配置不安全的设备… ZoomEye通过24小时不间断的对网络中的信息进行搜索，具备强大的信息库，是一款在渗透测试信息收集阶段的好助手，其多样化、多组合的搜索语法以及强有力的漏洞信息库的支持，使得ZoomEye使用更加便捷，不失为一款渗透测试的利器 相信大家应该早已提说过摄像头泄露了吧，嘿嘿嘿，我就不多说了。 其他的类似的shodan（撒旦）：https://www.shodan.io/ SenSys 网址：https://censys.io/ fofa 网站：网络空间测绘，网络空间安全搜索引擎，网络空间搜索引擎，安全态势感知 - FOFA网络空间测绘系统 Dnsdb搜索引擎： 360网络空间测绘： 360网络空间测绘 — 因为看见，所以安全 好啦好啦 接下来写一下作业： 利用ZoomEye进行相关搜索，截图，发布到自己的Blog。 子域名收集，截图。","tags":[{"name":"渗透作业","slug":"渗透作业","permalink":"http://tomotoes.com/tags/%E6%B8%97%E9%80%8F%E4%BD%9C%E4%B8%9A/"}]},{"title":"渗透测试第一次作业","date":"2023-11-07T14:38:33.000Z","path":"/posts/54952/","text":"kali渗透测试作业 题目： 1、Kali虚拟机采用桥接模式；物理机连接Guet-WiFi，Kali中查看网络配置并截图，能获得IP地址吗？ 2、Kali虚拟机采用桥接模式；物理机连接手机热点，Kali中查看网络配置并截图，能获得IP地址吗？ 3、对于1、2的结果，进行总结分析。 注：网络配置发生变化，建议重启网卡（操作命令见PPT） 基础知识了解： 首先了解一下kali重启网卡的命令： 1.service NetworkManager stop/service NetworkManager restart 2.ifconfig eth0 down / ifconfig eth0 up（输入ifconfig eth3 down ,卸载eth3网卡，输入ifconfig eth3 up,重新加载eth3网卡。） 3.ifdown eth0 / ifup eth0 输入ifdown eth3,对网卡eth3进行卸载，输入ifup eth3,对网卡eth3进行重新加载。 1、Kali虚拟机采用桥接模式；物理机连接Guet-WiFi，Kali中查看网络配置并截图，能获得IP地址吗？ 可见无法分配到ip 2、Kali虚拟机采用桥接模式；物理机连接手机热点，Kali中查看网络配置并截图，能获得IP地址吗？ 手机热点对虚拟机分配了ip 总结：校园网的话可能是做了某种防护，导致无法对虚拟机进行ip地址的分配，否则校园网下的ip地址就可能会不够分配。","tags":[{"name":"渗透作业","slug":"渗透作业","permalink":"http://tomotoes.com/tags/%E6%B8%97%E9%80%8F%E4%BD%9C%E4%B8%9A/"}]},{"title":"渗透测试PE启动盘","date":"2023-11-07T13:09:06.000Z","path":"/posts/12927/","text":"渗透测试课程第一次总结 第一个知识点：PE启动盘应急拷数据 首先我们要明白什么是PE启动盘 PE启动盘是一种预安装环境（Preinstallation Environment）的启动盘，也称为Windows PE启动盘。PE代表“预安装环境”，它是由微软开发的一种轻量级操作系统环境。 PE启动盘通常用于故障排除、系统维护、数据恢复和安装操作系统等任务。它提供了一个基于 Windows 的操作系统环境，具有较小的体积和资源需求，可以运行在计算机的内存中，而无需安装到硬盘上。 使用PE启动盘，您可以访问文件系统、执行故障排除工具、修复损坏的系统文件、恢复误删除的数据、进行病毒扫描、重置密码等操作。PE启动盘通常包含了一系列的实用工具和程序，以帮助用户进行系统维护和问题解决。 创建PE启动盘需要使用特定的工具和源文件，例如Windows安装映像（ISO文件）或Windows部署服务（Windows Deployment Services）。这些工具可用于将所需的组件和工具集成到PE环境中，并将其制作为可启动的U盘或光盘。 总之，PE启动盘是一种用于故障排除和系统维护的启动介质，它提供了一个基于 Windows 的轻量级操作系统环境，用于执行各种系统维护和修复任务。 所以PE启动盘是一个读计算机专业必须了解的东西，它能让我们对电脑进行应急处理。 PE启动盘在电脑系统出现故障的时候，不能进入windows系统的时候，PE启动盘就可以应急拷贝电脑数据 制作PE启动盘 获取Windows PE环境：首先，您需要获取Windows PE环境文件。这通常可以通过Windows安装映像（ISO文件）或Windows ADK（Windows Assessment and Deployment Kit）来获得。您可以从Microsoft官方网站下载适用于您的Windows版本的ADK。 准备一个空白U盘：选择一个可用的U盘，并确保其中没有重要数据，因为在制作过程中会将其格式化并删除所有内容。 格式化U盘：使用计算机上的磁盘管理工具（如Windows自带的磁盘管理器）将U盘进行格式化。选择FAT32文件系统格式，并确保分区处于活动状态。 挂载Windows PE映像：使用Windows ADK中的Deployment and Imaging Tools Environment（或其他类似的工具），将Windows PE映像（.wim文件）挂载到计算机上的一个目录。例如，可以使用以下命令挂载映像：imagex /mountrw &lt;路径\\WinPE.wim&gt; &lt;挂载目录&gt; 将Windows PE文件复制到U盘：打开挂载的目录，将其中的所有文件和文件夹复制到准备好的U盘中。确保全部文件都被复制，包括隐藏文件。 卸载Windows PE映像：在完成复制后，使用以下命令卸载挂载的映像：imagex /unmount /commit &lt;挂载目录&gt; U盘制作完成：此时，您已经成功将U盘制作为PE启动盘。可以拔出U盘，并在需要时将其插入到计算机中，在启动时选择从U盘引导。 这只是一种常见的PE启动盘制作方法，当然网上还有很多是直接用工具软件进行制作PE启动盘的，这样的话会更方便。网上有很多教程，这里就不再多讲了。 PE启动盘恢复数据 PE启动盘插入需要进行数据恢复的计算机中，启动计算机 在计算机启动的时候，进入BIOS设置界面，并确保将启动顺序设置为从PE启动盘引导。(进入BIOS界面通常要长按热键，联想的是f12，就是在计算机启动的时候长按f12，其他的话自己网上找就行了) 计算机将从PE启动盘启动，并进入Windows PE环境。可能需要选择适当的语言和键盘布局 确认PE环境能够正确识别并访问您要恢复数据的存储设备，例如硬盘、外部驱动器或网络共享等 使用PE环境中提供的文件管理器，浏览到存储设备上的目标文件或文件夹，以查找要恢复的数据。您可以使用搜索功能快速定位特定文件。 选中要恢复的文件或文件夹，并将其复制到另一个安全的存储介质，如另一块磁盘或外部驱动器。确保目标位置有足够的可用空间来存储恢复的数据。 在复制过程完成后，断开PE启动盘，并重新启动计算机。 学了这个知识点，以后的话如果电脑windows系统崩溃了，而我们又很需要拿出我们电脑里面的一个文件，PE启动盘就会帮我们一个大忙。","tags":[{"name":"渗透","slug":"渗透","permalink":"http://tomotoes.com/tags/%E6%B8%97%E9%80%8F/"}]},{"title":"中文測試","date":"2023-10-24T15:31:30.000Z","path":"/posts/37613/","text":"This is a Chinese test post. 善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。 以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？ 就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。 國新故。 工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？ From 亂數假文產生器 - Chinese Lorem Ipsum","tags":[{"name":"博客使用测试","slug":"博客使用测试","permalink":"http://tomotoes.com/tags/%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/"}]},{"title":"Step.2 基本配置","date":"2023-10-24T12:56:48.000Z","path":"/posts/37729/","text":":::primary 🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能 ::: 站点别称 1alternate: Yume Shoka 这里设置的名称代替Logo，显示在页面顶部，以及页尾©处 静态文件目录 1statics: / #//cdn.jsdelivr.net/gh/amehime/shoka@latest/ 默认值是/，指使用本地静态文件 可以修改成//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/这种形式，以使用jsDelivr进行加速。 PS：jsDelivr并不是实时更新，重新生成文件后需要耐心等待 123css: cssjs: jsimages: images 静态文件所处目录的实际目录名，这些一般不改。 夜间模式 1darkmode: # true 默认情况下，是否开启夜间模式取决于（优先级从高到低）： 访客点击页面头部切换按钮的自行选择 访客切换了浏览设备的主题色调 您的darkmode配置项 自动定位 1auto_scroll: # false 默认情况下，再次打开页面时，会自动滚动到上次浏览的位置。 这个选项设为false时将停用此功能。 加载动画 1234# 是否显示页面加载动画loading-catloader: start: true # 当初次打开页面时，显示加载动画 switch: true # tab切换到其他页面时，显示加载动画 tab切换后只是显示loading动画，实际并未重新加载页面 页面特效 单击页面的烟花效果配置如下 1234567fireworks: enable: true # 是否启用 color: # 烟花颜色 - \"rgba(255,182,185,.9)\" - \"rgba(250,227,217,.9)\" - \"rgba(187,222,214,.9)\" - \"rgba(138,198,209,.9)\" 加载谷歌字体 12345678910111213141516171819202122232425262728293031323334353637383940font: enable: true # Font options: # `external: true` will load this font family from `host` above. # `family: Times New Roman`. Without any quotes. # `size: x.x`. Use `em` as unit. Default: 1 (16px) # Global font settings used for all elements inside &lt;body&gt;. global: external: true family: Mulish size: # Font settings for alternate title. logo: external: true family: Fredericka the Great size: 3.5 # Font settings for site title. title: external: true family: Noto Serif JP size: 2.5 # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;). headings: external: true family: Noto Serif SC size: # Font settings for posts. posts: external: true family: # Font settings for &lt;code&gt; and code blocks. codes: external: true family: Inconsolata 此功能基本参考NexT。 加粗标题的字体总是使用Noto Serif，为了正确友好的显示日文中的汉字，会先后加载headings和title的字体设置。 iconfont图标 主题没有直接使用Font Awesome，是因为用不到那么多icon感觉非常浪费，因此在Iconfont上重新建立了一个项目。 font-family设为ic，所有字体样式前缀为i-，具体参见&lt;root&gt;/themes/shoka/source/css/_iconfont.styl。 123# project of https://www.iconfont.cn/# //at.alicdn.com/t/font_1832207_c8i9n1ulxlt.css =&gt; 1832207_c8i9n1ulxlticonfont: \"1832207_c8i9n1ulxlt\" 如果需要添加或修改，请留言告诉我您的Iconfont用户名，我将把您添加到目前的项目中。 添加权限为只读，此后您可以任意全选，批量保存到购物车中，添加至您自己的项目里，并将主题配置文件中的iconfont值改为您的项目。 注意，您的项目应设置FontClass/Symbol 前缀为i-。 在&lt;root&gt;/source/_data/目录新建文件iconfont.styl，把新增或修改的图标样式复制到这个文件中。 自定义iconfont.styl文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。 菜单与社交按钮 1234567891011121314151617181920212223242526menu: home: / || home about: /about/ || user posts: default: / || feather archives: /archives/ || list-alt categories: /categories/ || th tags: /tags/ || tags # friends: /friends/ || heart # links: /links/ || magicsocial: github: https://github.com/yourname || github || \"#191717\" #google: https://plus.google.com/yourname || google twitter: https://twitter.com/yourname || twitter || \"#00aff0\" zhihu: https://www.zhihu.com/people/yourname || zhihu || \"#1e88e5\" music: https://music.163.com/#/user/home?id=yourid || cloud-music || \"#e60026\" weibo: https://weibo.com/yourname || weibo || \"#ea716e\" about: https://about.me/yourname || address-card || \"#3b5998\" #email: mailto:yourname@mail.com || envelope || \"#55acd5\" #facebook: https://www.facebook.com/yourname || facebook #stackoverflow: https://stackoverflow.com/yourname || stack-overflow #youtube: https://youtube.com/yourname || youtube #instagram: https://instagram.com/yourname || instagram #skype: skype:yourname?call|chat || skype #douban: https://www.douban.com/people/yourname/ || douban 如上，使用||作为分隔符，依次为 链接 || 图标 || 颜色。 注意，只需要写图标名称，如github，则会自动转换为ic i-github。 十六进制颜色码需要\"\"包绕。 menu 支持一级子目录，子目录设置中的第一项必须为default，用来定义父级按钮的样式。 菜单显示文字可以在语言包中定义，具体请戳这里 边栏配置 边栏可以选择在左侧，或右侧 修改头像文件的地址，相对于静态文件目录images中配置的路径。 123456sidebar: # Sidebar Position. position: left #position: right # Replace the default avatar image and set the url here. avatar: avatar.jpg 可以将自己的图片放在&lt;root&gt;/source/_data/images/目录，甚至以同名覆盖主题内默认的头像图片，具体请戳这里 底部widgets 目前页面底部可以显示两个小部件，即随机文章和最近评论。 123widgets: random_posts: true # 显示随机文章 recent_comments: true # 显示最近评论 字数及阅读时间统计 安装好hexo-symbols-count-time插件后，不需要修改站点配置文件，直接使用插件默认配置就行。 需要修改主题配置文件，找到两处cout，修改为true： 12345678# 页尾全站统计footer: since: 2010 count: true# 文章界面统计post: count: true 文章评论 如何获取LeanCloud的appId和appKey。 1234567891011121314151617181920212223242526272829valine: appId: #Your_appId appKey: #Your_appkey placeholder: ヽ(○´∀`)ﾉ♪ # Comment box placeholder avatar: mp # Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro pageSize: 10 # Pagination size lang: zh-CN visitor: true # 文章访问量统计 NoRecordIP: false # 不记录IP serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in) powerMode: true # 默认打开评论框输入特效 tagMeta: visitor: 新朋友 master: 主人 friend: 小伙伴 investor: 金主粑粑 tagColor: master: \"var(--color-orange)\" friend: \"var(--color-aqua)\" investor: \"var(--color-pink)\" tagMember: master: # - hash of master@email.com # - hash of master2@email.com friend: # - hash of friend@email.com # - hash of friend2@email.com investor: # - hash of investor1@email.com tag标签显示在评论者名字的后面，默认是tagMeta.visitor对应的值。 在tagMeta和tagColor中，除了visitor这个key不能修改外，其他key都可以换一换，但需要保证一致性。 举个栗子12345678910111213tagMeta: visitor: 游客 admin: 管理员 waifu: 我老婆tagColor: visitor: \"#855194\" admin: \"#a77c59\" waifu: \"#ed6ea0\"tagMember: admin: # - hash of admin@email.com waifu: # - hash of waifu@email.com 在文章Front Matter中也可以配置上述参数，访问该文章页面时，将覆盖全局配置。 尤其可以用来配置一个特殊的placeholder。 123valine: placeholder: \"1. 提问前请先仔细阅读本文档⚡\\n2. 页面显示问题💥，请提供控制台截图📸或者您的测试网址\\n3. 其他任何报错💣，请提供详细描述和截图📸，祝食用愉快💪\"--- 评论通知与管理工具建议使用这个Valine-Admin。 注意SITE_URL需要以/结尾。 如果某一篇文章需要关闭评论功能，则在文章Front Matter中配置： 1234---title: 关闭评论comment: false--- 背景音乐 在主题配置文件中，设置全局播放列表。 在文章的 Front Matter 中，设置文章专有播放列表，访问该文章页面时，将覆盖全局配置。 单列表12345audio: - https://music.163.com/song?id=1387098940 - https://music.163.com/#/playlist?id=2088001742 - https://www.xiami.com/collect/250830668 - https://y.qq.com/n/yqq/playsquare/3535982902.html 如上，可以直接使用网易云、虾米、QQ音乐的播放列表、单曲，可以同时填写多个。 多列表12345678audio: - title: 列表1 list: - https://music.163.com/#/playlist?id=2943811283 - https://music.163.com/#/playlist?id=2297706586 - title: 列表2 list: - https://music.163.com/#/playlist?id=2031842656 如果需要自定义媒体文件，可以按照以下格式填写： 单列表1234567891011audio: - name: \"曲目1\" url: \"播放地址\" artist: \"艺术家\" cover: \"封面\" lrc: \"歌词\" - name: \"曲目2\" url: \"播放地址\" artist: \"艺术家\" cover: \"封面\" lrc: \"歌词\" 多列表12345678910111213141516audio: - title: 列表1 list: - name: \"曲目1\" url: \"播放地址\" artist: \"艺术家\" cover: \"封面\" lrc: \"歌词\" - name: \"曲目2\" url: \"播放地址\" artist: \"艺术家\" cover: \"封面\" lrc: \"歌词\" - title: 列表2 list: - https://music.163.com/#/playlist?id=2031842656 如果要关闭当前页面的背景音乐播放器，则在文章Front Matter中配置： 1234---title: 关闭背景音乐audio: false--- 随机图库 默认的图片列表位于&lt;root&gt;/themes/shoka/_images.yml中。 使用了渣浪图库，使用一些上传工具，比如这里 上传后图片的链接是http://wx4.sinaimg.cn/large/6833939bly1gicmnywqgpj20zk0m8dwx.jpg。 只需要新一行写上- 6833939bly1gicmnywqgpj20zk0m8dwx.jpg。 如果想要自定义，则在&lt;root&gt;/source/_data/目录新建一个images.yml文件，这个文件中的图片至少6枚，将完全覆盖默认的图片列表。 也可以直接在图片列表yml文件中，写上任意外链图片地址 12345- https://i.loli.net/2020/10/30/qAMYEFXxJcKRsiG.gif- https://i.loli.net/2020/10/30/rjdhcSgEN8COBPA.jpg- https://i.loli.net/2020/10/30/HKyzSd7NI3mlBpt.jpg- https://i.loli.net/2020/10/30/Y1CBXqgeokEs457.jpg- https://i.loli.net/2020/10/30/Z5W6r2BSoiThHG1.jpg 也可以在主题配置文件中，设置图床API： 比如1image_server: \"https://acg.xydwz.cn/api/api.php\" 加载第三方组件 12345vendors: css: # 略略略 js: # 略略略 包括 –|–|– pace | 加载进度条|全局 pjax | 页面无刷新加载|全局 anime | js动画效果|全局 algolia instantsearch| 基于algolia的站内搜索|全局 lazyload | 图片懒加载|全局 quicklink | 链接资源预加载|全局 fetch | 获取播放列表|全局 katex copy_tex|数学公式显示及复制|按需 fancybox | 图片放大显示及排列|按需 valine | 基于LeanCloud的评论系统及文章阅读次数统计|按需 chart | 图表显示|按需 以上文件加载全部基于jsDelivr，并对全局加载的组件进行了文件合并。 如果不明白啥意思，则不要轻易修改。 :::danger 主题版本升级的时候，可能会修改这里。 如果修改过主题默认_config.yml，记得更新主题时，末尾的vendors也要及时修改。 :::","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://tomotoes.com/tags/Hexo/"},{"name":"教程","slug":"教程","permalink":"http://tomotoes.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"Hello World","date":"2023-10-23T14:10:12.000Z","path":"/posts/16107/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new \"My New Post\" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","tags":[{"name":"博客使用测试","slug":"博客使用测试","permalink":"http://tomotoes.com/tags/%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/"}]}]